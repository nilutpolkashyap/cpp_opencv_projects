<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{18EB2F65-0483-3F5F-A1A9-53EBFCD86923}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.2.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenCV\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenCV\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenCV\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>E:\OpenCV\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.2\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule F:/github/cpp_opencv_projects/cpp_opencv_basics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SF:/github/cpp_opencv_projects/cpp_opencv_basics -BF:/github/cpp_opencv_projects/cpp_opencv_basics/build --check-stamp-file F:/github/cpp_opencv_projects/cpp_opencv_basics/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCUDAInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\run_nvcc.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\select_compute_arch.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake;E:\OpenCV\OpenCVConfig-version.cmake;E:\OpenCV\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-debug.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-release.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCUDACompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCXXCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeRCCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeSystem.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.cmake.pre-gen;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule F:/github/cpp_opencv_projects/cpp_opencv_basics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SF:/github/cpp_opencv_projects/cpp_opencv_basics -BF:/github/cpp_opencv_projects/cpp_opencv_basics/build --check-stamp-file F:/github/cpp_opencv_projects/cpp_opencv_basics/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCUDAInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\run_nvcc.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\select_compute_arch.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake;E:\OpenCV\OpenCVConfig-version.cmake;E:\OpenCV\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-debug.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-release.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCUDACompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCXXCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeRCCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeSystem.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.cmake.pre-gen;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule F:/github/cpp_opencv_projects/cpp_opencv_basics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SF:/github/cpp_opencv_projects/cpp_opencv_basics -BF:/github/cpp_opencv_projects/cpp_opencv_basics/build --check-stamp-file F:/github/cpp_opencv_projects/cpp_opencv_basics/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCUDAInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\run_nvcc.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\select_compute_arch.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake;E:\OpenCV\OpenCVConfig-version.cmake;E:\OpenCV\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-debug.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-release.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCUDACompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCXXCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeRCCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeSystem.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.cmake.pre-gen;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule F:/github/cpp_opencv_projects/cpp_opencv_basics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SF:/github/cpp_opencv_projects/cpp_opencv_basics -BF:/github/cpp_opencv_projects/cpp_opencv_basics/build --check-stamp-file F:/github/cpp_opencv_projects/cpp_opencv_basics/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCUDAInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCXXInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeCommonLanguageInclude.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeGenericSystem.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeInitializeConfigs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeLanguageInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeRCInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInformation.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\CMakeSystemSpecificInitialize.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Compiler\NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\run_nvcc.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindCUDA\select_compute_arch.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\FindPackageMessage.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC-CXX.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-MSVC.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows-NVIDIA-CUDA.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\Windows.cmake;D:\Program Files\CMake\share\cmake-3.22\Modules\Platform\WindowsPaths.cmake;E:\OpenCV\OpenCVConfig-version.cmake;E:\OpenCV\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVConfig.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-debug.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules-release.cmake;E:\OpenCV\x64\vc16\lib\OpenCVModules.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCUDACompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeCXXCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeRCCompiler.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\3.22.0-rc3\CMakeSystem.cmake;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.cmake.pre-gen;F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\pi-cuda.dir\src\pi-cuda_generated_pi-cuda.cu.obj.depend;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">F:\github\cpp_opencv_projects\cpp_opencv_basics\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\ZERO_CHECK.vcxproj">
      <Project>{D7CE0072-A86E-31A1-9DE2-15866DDA3F57}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\blob_detector.vcxproj">
      <Project>{2BFA2A1A-ABD5-3DC1-B7CC-5CFA49440A2A}</Project>
      <Name>blob_detector</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\graphics_example.vcxproj">
      <Project>{4F9417AE-FE1A-393C-AD3F-45D06F826A94}</Project>
      <Name>graphics_example</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_cropping.vcxproj">
      <Project>{E62CA929-A0C2-38F1-A5E0-3B4BE92A66E4}</Project>
      <Name>image_cropping</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_read_display.vcxproj">
      <Project>{565AFF96-6983-370E-933B-324E99450135}</Project>
      <Name>image_read_display</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_read_write.vcxproj">
      <Project>{714122B1-6ED7-34FB-A39C-E561CEEABD0B}</Project>
      <Name>image_read_write</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_resize_interpolation.vcxproj">
      <Project>{0FFE9933-3EFE-3123-B8FC-527A7E50C3FE}</Project>
      <Name>image_resize_interpolation</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_resizing.vcxproj">
      <Project>{71DAACBA-6F60-30E1-A5E8-28D50D5D06D8}</Project>
      <Name>image_resizing</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\image_rotation.vcxproj">
      <Project>{E206D7F9-0448-39BD-9815-4FEADC603C04}</Project>
      <Name>image_rotation</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\pi-cuda.vcxproj">
      <Project>{91E113C5-77BF-3383-822E-DB93102FDD16}</Project>
      <Name>pi-cuda</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\video_read_write.vcxproj">
      <Project>{2AF5A082-325F-3815-BB2F-BD50D4B0AED3}</Project>
      <Name>video_read_write</Name>
    </ProjectReference>
    <ProjectReference Include="F:\github\cpp_opencv_projects\cpp_opencv_basics\build\video_write.vcxproj">
      <Project>{2FBE945C-0B8E-3E1D-B85C-D367814D0C12}</Project>
      <Name>video_write</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.2.targets" />
  </ImportGroup>
</Project>